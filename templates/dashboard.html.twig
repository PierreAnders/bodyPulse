{% extends 'base.html.twig' %}

{% block title %}dashboard{% endblock %}

{% block body %}



<div class="pt-20 flex items-center justify-center">
    <img src="{{ asset('img/female.svg') }}" alt="Description">
    <div>
        {% for user_information in user_informations %}
            <div class="p-8">
                <div class="pt-2"><span class="font-bold text-xl font-comfortaa"> {{ user_information.firstName }} </span> <span class="font-bold text-xl font-comfortaa">{{ user_information.lastName }} </span></div>
                <div class="pt-2"><span class="font-bold text-xl font-comfortaa">{{ user_information.height }}m / </span><span class="font-bold text-xl font-comfortaa">{{ user_information.weight }}kg </span></div>
                <div class="pt-2"><span class="font-bold text-xl font-comfortaa">BMI {{ user_information.bmi|round(1) }} </span></div>
                <div class="mt-2">
                    {# <a href="{{ path('app_user_information_show', {'id': user_information.id}) }}" class="text-blue-500">show</a> #}
                    {# <a href="{{ path('app_user_information_edit', {'id': user_information.id}) }}" class="font-bold text-lg font-comfortaa underline-offset-4">edit</a> #}
                </div>
            </div>
        {% else %}
            <div class="border p-4">
                <div class="font-bold">No records found</div>
            </div>
              
        {% endfor %}
        
<div id="chart"></div>
    </div>
</div>
    <script>
        var width = 250
        var height = 250
        var margin = 1

        var radius = Math.min(width, height) / 3 - margin

        var svg = d3.select('#chart')
          .append("svg")
            .attr("width", width)
            .attr("height", height)
          .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var data = {a: 9, b: 20}

        var color = d3.scaleOrdinal()
          .domain(data)
          .range(d3.schemeDark2);

        var pie = d3.pie()
          .value(function(d) {return d.value; })
        var data_ready = pie(d3.entries(data))

        svg
          .selectAll('whatever')
          .data(data_ready)
          .enter()
          .append('path')
          .attr('d', d3.arc()
            .innerRadius(60)         // This is the size of the donut hole
            .outerRadius(radius)
          )
          .attr('fill', function(d){ return(color(d.data.key)) })
          .attr("stroke", "white")
          .style("stroke-width", "2px")
          .style("opacity", 0.7)
    </script>
{% endblock %}